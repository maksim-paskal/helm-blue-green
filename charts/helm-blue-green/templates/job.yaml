apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%d" (include "common.names.fullname" .) .Release.Revision }}
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 6000
  template:
    metadata:
      labels:
        app: {{ include "common.names.fullname" . }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "common.names.fullname" . }}
{{ if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
{{ end }}
{{ if .Values.affinity }}
      tolerations:
{{ toYaml .Values.affinity | nindent 6 }}
{{ end }}
{{ if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | nindent 6 }}
{{ end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "common.names.fullname" . }}
      containers:
      - name: helm-blue-green
        image: {{ printf "%s/%s:%s" (default .Values.image.registry .Values.global.imageRegistry) .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 30001
          runAsGroup: 30001
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        env:
        - name: CONFIG_PATH
          value: {{ .Values.configPath | quote }}
        - name: VERSION
          value: {{ .Values.version | quote }}
{{ if .Values.useDefaultsEnv }}
        - name: MIN_REPLICAS
          value: {{ .Values.minReplicas | quote }}
        - name: MAX_REPLICAS
          value: {{ .Values.maxReplicas | quote }}
        - name: MIN_AVAILABLE
          value: {{ .Values.minAvailable | quote }}
        - name: AVARAGE_UTILIZATION
          value: {{ .Values.averageUtilization | quote }}
{{ end }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{ if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | nindent 8 }}
{{ end }}
        volumeMounts:
        - name: config
          mountPath: /config
{{ if .Values.args }}
        args:
{{ toYaml .Values.args | nindent 8 }}
{{ end }}