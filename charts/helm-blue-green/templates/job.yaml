apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%d" (include "helm-blue-green.fullname" .) .Release.Revision }}
spec:
  backoffLimit: {{ .Values.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.activeDeadlineSeconds }}
  template:
    metadata:
      labels:
        app: {{ include "helm-blue-green.fullname" . }}
{{ if .Values.labels }}
{{ toYaml .Values.labels | indent 8 }}
{{ end }}
{{ if .Values.annotations }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{ end }}
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: {{ include "helm-blue-green.fullname" . }}
{{ if .Values.priorityClassName }}
      podPriorityClassName: {{ .Values.priorityClassName | quote }}
{{ end }}
{{ if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
{{ end }}
{{ if .Values.affinity }}
      tolerations:
{{ toYaml .Values.affinity | nindent 6 }}
{{ end }}
{{ if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | nindent 6 }}
{{ end }}
      volumes:
      {{ if .Values.prometheus.enabled }}
      - name: prometheus-data
        emptyDir: {}
      {{ end }}
      - name: config
        configMap:
          name: {{ include "helm-blue-green.fullname" . }}
      {{ if .Values.prometheus.enabled }}
      initContainers:
      # Init container to create the prometheus.yml file
      - name: prometheus-init
        image: alpine:3.14
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - touch /data/prometheus.yml && chmod 777 /data/prometheus.yml
        volumeMounts:
        - name: prometheus-data
          mountPath: /data
      {{ end }}
      containers:
      - name: helm-blue-green
        image: {{ printf "%s/%s:%s" (default .Values.image.registry .Values.global.imageRegistry) .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 30001
          runAsGroup: 30001
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: CONFIG_PATH
          value: {{ .Values.configPath | quote }}
        - name: VERSION
          value: {{ .Values.version | quote }}
{{ if .Values.useDefaultsEnv }}
        - name: ENVIRONMENT
          value: {{ .Values.environment | quote }}
        - name: MIN_REPLICAS
          value: {{ .Values.minReplicas | quote }}
        - name: MAX_REPLICAS
          value: {{ .Values.maxReplicas | quote }}
        - name: MIN_AVAILABLE
          value: {{ .Values.minAvailable | quote }}
        - name: MAX_UNAVAILABLE
          value: {{ .Values.maxUnavailable | quote }}
        - name: AVARAGE_UTILIZATION
          value: {{ .Values.averageUtilization | quote }}
        {{ if .Values.prometheus.enabled }}
        - name: PROMETHEUS_URL
          value: "http://127.0.0.1:9090"
        - name: PROMETHEUS_CONFIG_PATH
          value: {{ "/data/prometheus.yml" | quote }}
        {{ end }}
{{ end }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{ if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | nindent 8 }}
{{ end }}
        volumeMounts:
        - name: config
          mountPath: /config
        {{ if .Values.prometheus.enabled }}
        - name: prometheus-data
          mountPath: /data
        {{ end }}
{{ if .Values.args }}
        args:
{{ toYaml .Values.args | nindent 8 }}
{{ end }}
{{ if .Values.prometheus.enabled }}
      - name: prometheus
        image: prom/prometheus:v2.44.0
        imagePullPolicy: IfNotPresent
        args:
        - --config.file=/data/prometheus.yml
        - --storage.tsdb.path=/data/
        - --storage.tsdb.retention=10m
        - --web.enable-lifecycle
        volumeMounts:
        - name: prometheus-data
          mountPath: /data
      - name: envoy-sidecar-helper
        image: paskalmaksim/envoy-sidecar-helper:v0.0.5
        imagePullPolicy: IfNotPresent
        args:
        - -exit.zero=true
        - -envoy.ready.check=false
        - -envoy.endpoint.quit=/-/quit
        - -envoy.port=9090
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{ end }}